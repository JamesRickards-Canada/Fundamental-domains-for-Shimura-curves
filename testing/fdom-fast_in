\r fdom;

testalgfdom(L) = {
  my(F, A, X, elts, S, P, g, word, newword);
  for (i = 1, #L,
    for (j = 1, #L[i][1],
      F = nfinit(L[i][1][j]);
      A = alginit(F, L[i][2][j]);
      X = afuchinit(A, , , 1);
      if (j == 1, X = afuchnewp(X, random(1.) + random(1.) * I));
      if ((i + j) % 3 == 0, X = afuchmoreprec(X, random(4) + 1));
      elts = afuchelts(X);
      S = afuchsignature(X);
      print(S);/*Invariant.*/
      X = afuchmakepresentation(X);
      P = afuchpresentation(X);
      g = algmulvec(A, elts, vector(5 + random(15), k, (2*random(2) - 1)*(random(#elts) + 1)));/*Random norm 1 element.*/
      word = afuchword(X, g);
      newg = algmulvec(A, P[1], word);
      if(newg == g || newg == -g, print("Passed word test"), print("Failed word test"));
      /*if(algelttype(A, g)==1,geod=algfdomrootgeodesic(g, U));/*No error should be raised if this works.*/
    );
  );
}

As=vector(3);/*Various algebras*/
As[1] = [[y, y, y, y], [[3, 1], [-21, 11], [-117, 2627], [923, -4476549]]];
As[2] = [[y^2 - 10, y^2 - y - 17], [[-8*y + 9, -y + 1], [-2*y + 6, 8*y - 111]]];
As[3] = [[y^3 - 3*y - 1, y^3 - 4*y - 1], [[3*y^2 - 5*y - 8, 84*y^2 - 140*y - 223], [-38*y^2 + 124*y - 93, 5*y^2 - 11*y - 20]]];
testalgfdom(As);

/*Time for some Eichler orders.*/
F = nfinit(y);
A = alginit(F, [2, 1]);/*Unramified*/

O1bas = [[1, 0]~, [5*x, 0]~, [4*x + 1/2, 1/2]~, [17/4*x, 1/4*x]~];/*Level 5*/
O1 = algorderalgtoorder(A, O1bas);
if(!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
X = afuchmoreprec(X, 3);
X = afuchnewp(X, Pi + 0.5119*I);
print(afuchsignature(X));
X = afuchmakepresentation(X);
P = afuchpresentation(X);
print(length(P[1]));

O1bas = [[1, 0]~, [97*x, 0]~, [57*x + 1/2, 1/2]~, [265/4*x, 1/4*x]~];/*Level 97*/
O1 = algorderalgtoorder(A, O1bas);
if(!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
print(afuchsignature(X));
X = afuchmakepresentation(X);
P = afuchpresentation(X);
print(length(P[1]));

A = alginit(F, [3, -1]);/*Ramified at 2, 3*/

O1bas = [[1, 0]~, [37*x, 0]~, [18*x, 1]~, [21/2*x + 1/2, 1/2*x + 1/2]~];/*Level 37*/
O1 = algorderalgtoorder(A, O1bas);
if(!algisorder(A, O1),print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
print(afuchsignature(X));
X = afuchmakepresentation(X);
P = afuchpresentation(X);
print(length(P[1]));

A = alginit(F, [105, -8]);/*Ramified at 5, 7*/

O1bas = [[1, 0]~, [1/2*x - 1/2, 0]~, [0, 2]~, [1/3*x, 1/24*x + 15/8]~];/*Level 4*/
O1 = algorderalgtoorder(A, O1bas);
if(!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 1);
X = afuchnewp(X, -1 + sqrt(3)*I);
print(afuchsignature(X));
X = afuchmakepresentation(X);
X = afuchmoreprec(X, 1);
P = afuchpresentation(X);
print(length(P[1]));

F = nfinit(y^2 - 2);
A = alginit(F,  [-7*y + 1, -15*y + 17]);/*Ramified at the prime above 2*/

O1bas = [[1, 0]~, [-y, 0]~, [9*x, 0]~, [-9*y*x, 0]~, [(-6*y + 5)*x, 1]~, [(-5/2*y + 6)*x, -1/2*y]~, [(-1/2*y + 7/2)*x + 1/2, 1/2*x + 1/2]~, [(-1311/194*y + 949/194)*x + (-1/2*y + 1/2), (-1/31234*y + 5709/31234)*x + (-73/161*y + 339/322)]~];/*Level 9*/
O1 = algorderalgtoorder(A, O1bas);
if(!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 1);
print(afuchsignature(X));
X = afuchmakepresentation(X);
P = afuchpresentation(X);
print(length(P[1]));

F = nfinit(y^2-3);
A = alginit(F, [-7*y + 2, -551*y - 720]);/*Ramified at places above 2, 3, 23.*/
O1bas = [[1, 0]~, [-y, 0]~, [-11*x, 0]~, [(-y - 6)*x, 0]~, [-6*x, 1]~, [(-1/2*y - 5/2)*x, -1/22*y + 5/22]~, [(-6/11*y - 137/22)*x - 1/2*y, -1/22*x + 1/2]~, [(-333/286*y - 640/143)*x + (-y + 1/2), (-1/13442*y - 288/6721)*x + (-9/1034*y + 369/517)]~];/*Level a prime above 11.*/
O1 = algorderalgtoorder(A, O1bas);
if(!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X3 = afuchinit(A, O1, 3, 1);
print(afuchsignature(X3));
X1 = afuchnewtype(X3, 1);
print(afuchsignature(X1));
X0 = afuchnewtype(X1, 0);
print(afuchsignature(X0));
Xm1 = afuchnewtype(X3, [1,0;0,0;1,0;1,1]);
print(afuchsignature(Xm1));
Xm2 = afuchnewtype(X3, [1,0,0;0,1,0;0,0,1;0,0,1]);
print(afuchsignature(Xm2));
Xm3 = afuchnewtype(X3, [1;1;1;1]);
print(afuchsignature(Xm3));
