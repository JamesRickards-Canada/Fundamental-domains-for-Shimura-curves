\r fdom;

testalgfdom(L) = {
  my(F, A, X, S);
  for (i = 1, #L,
    for (j = 1, #L[i][1],
      F = nfinit(L[i][1][j]);
      A = alginit(F, L[i][2][j]);
      X = afuchinit(A, , , 1);
      if (i == #L, X = afuchinit(A, , 3, 1), X = afuchinit(A, , , 1));/*Last set do normalizer.*/
      if (j == 1, X = afuchnewp(X, 0.5 + random(1.) + (0.5 + random(1.)) * I));
      if ((i + j) % 3 == 0, X = afuchmoreprec(X, random(4) + 1));
      S = afuchsignature(X);
      print(S);/*Invariant.*/
      onealgcheck(X);
    );
  );
}

onealgcheck(X) = {
  my(ch);
  ch = afuchcheck(X);
  if (ch == 1, print("Signature area formula does not match computed area"));
  if (ch == 2, print("Presentation has wrong number of generators"));
  if (ch == 3, print("Presentation has wrong number of relations"));
  if (ch == 4, print("One of the relations fails"));
  if (ch == 5, print("One of the side pairing element relations fails"));
  if (ch == 6, print("afuchfdomword fails on a random element (15 tested)"));
  if (ch == 7, print("Wrong number of elliptic elements, or their orders are incorrect"));
}

As = vector(7);/*Various algebras*/
As[1] = [[y, y, y, y], [[3, 1], [-21, 11], [2627, -117], [-4476549, 923]]];
As[2] = [[y^2 - y - 9, y^2 - 10, y^2 - y - 17, y^2 - 23], [[-12*y - 31, -2*y - 5], [-y + 1, -8*y + 9], [8*y - 111, -2*y + 6], [-12*y + 1, -y]]];
As[3] = [[y^3 - 3*y - 1, y^3 - 4*y - 1, y^3 - y^2 - 4*y + 1], [[84*y^2 - 140*y - 223, 3*y^2 - 5*y - 8], [-38*y^2 + 124*y - 93, 5*y^2 - 11*y - 20], [16*y^2 - 48*y - 5, 264*y^2 - 880*y - 821]]];
As[4] = [[y^4 - y^3 - 5*y^2 + 2*y + 4, y^4 - 9*y^2 + 4, y^4 - 2*y^3 - 4*y^2 + 2*y + 1], [[-2*y^3 + 6*y^2 - 2*y - 24, 22*y^3 - 70*y^2 + 10*y - 91], [2*y^2 - 6*y - 28, 82*y^3 - 30*y^2 - 528*y - 500], [-8*y^3 + 32*y^2 - 60*y - 111, -3*y^3 + 10*y^2 - 3*y - 8]]];
As[5] = [[y^5 - 5*y^3 - y^2 + 3*y + 1, y^5 - 5*y^3 - y^2 + 3*y + 1], [[8*y^4 - 8*y^3 - 28*y^2 + 8*y - 23, -y - 1], [3*y^4 - 2*y^3 - 10*y^2 - y - 8, -32*y^4 + 84*y^3 + 112*y^2 - 248*y - 347]]];
As[6] = [[y^6 - y^5 - 7*y^4 + 2*y^3 + 7*y^2 - 2*y - 1], [[2*y^5 - 16*y^3 - 7*y^2 + 11*y - 5, 124*y^5 - 40*y^4 - 860*y^3 - 452*y^2 + 584*y + 89]]];
As[7] = [[y, y^2 - 7, y^3 - 4*y - 1], [[1547, -26141205], [-1, -3*y - 1], [-15*y^2 + 33*y - 16, 626*y^2 - 756*y - 2133]]];
testalgfdom(As);

/*Time for some Eichler orders.*/
F = nfinit(y);
A = alginit(F, [2, 1]);/*Unramified*/

O1 = algeichlerorder(A, 5);/*Level 5*/
if (!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
X = afuchmoreprec(X, 2);
X = afuchnewp(X, sqrt(5) + 1.3967*I);
print(afuchsignature(X));
onealgcheck(X);

O1 = algeichlerorder(A, 97);/*Level 97*/
if (!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
X = afuchnewp(X, Pi - 3 + sqrt(11)/4 * I);
print(afuchsignature(X));
onealgcheck(X);

O1 = algeichlerorder(A, 120);/*Level 120*/
if (!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
print(afuchsignature(X));
onealgcheck(X);

A = alginit(F, [21, 715]);/*Ramified at 11, 13*/

O1 = algeichlerorder(A, 2);/*Level 2*/
if (!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
print(afuchsignature(X));
X = afuchmoreprec(X, 1);
onealgcheck(X);


F = nfinit(y^2 - 11);
A = alginit(F, [-2*y + 4, -y - 4]);/*Ramified at one prime above 5*/

O1 = algeichlerorder(A, idealprimedec(F, 5)[2]);/*Level the other prime above 5*/
if (!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
print(afuchsignature(X));
onealgcheck(X);

F = nfinit(y^3 - 5*y + 1);
A = alginit(F, [y - 2, -1]);/*Unramified*/
O1 = algeichlerorder(A, [33, 14, 5; 0, 1, 0; 0, 0, 1]);/*Level of norm 33*/
if (!algisorder(A, O1), print("Not an order"));
print(algorderlevel(A, O1, 0));
X = afuchinit(A, O1, , 2);
print(afuchsignature(X));
X = afuchnewp(X, Pi / 2 + 0.7871*I);
onealgcheck(X);

F = nfinit(y^2 - 103);
A = alginit(F, [y - 38, -43*y - 4]);
X = afuchinit(A, , 3);
print(afuchsignature(X));
onealgcheck(X);
